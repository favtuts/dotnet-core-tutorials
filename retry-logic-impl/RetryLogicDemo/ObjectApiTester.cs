using System;
using System.ComponentModel.DataAnnotations;
using Newtonsoft.Json;

public static class ObjectApiTester
{

    public static async Task<AddObjectResponse> AddNewObject()
    {
        AddObjectResponse result = null;
        try
        {
            var requestModel = new AddObjectRequest
            {
                Name = "Apple MacBook Pro 16",
                Data = new ObjectData
                {
                    Year = 2019,
                    Price = 1849.99,
                    CPUModel = "Intel Core i9",
                    HardDiskSize = "1 TB"
                }
            };

            var url = "https://api.restful-api.dev/objects";

            var apiHelper = new ApiHelper(url);
            var responseModel = await apiHelper.PostAsync<AddObjectResponse>(url, requestModel);

            result = responseModel;
                        
            Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject( responseModel, Formatting.Indented ));

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

        return result;
    }

    public static async void GetSingleOject()
    {
        try
        {            
            var objectId = "7";
            var url = "https://api.restful-api.dev/objects/" + objectId ;

            var apiHelper = new ApiHelper(url);
            var responseModel = await apiHelper.GetAsync<GetSingleObjectResponse>(url);
                        
            Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject( responseModel, Formatting.Indented ));

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }

    public static async void ListAllOjects()
    {
        try
        {                        
            var url = "https://api.restful-api.dev/objects";

            var apiHelper = new ApiHelper(url);
            var responseModel = await apiHelper.GetAsync<List<ObjectModelResponse>>(url);
                        
            Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject( responseModel, Formatting.Indented ));

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }


    public static async void ListOjectsByIDS()
    {
        try
        {                        
            var url = "https://api.restful-api.dev/objects?id=3&id=5&id=10";

            var apiHelper = new ApiHelper(url);
            var responseModel = await apiHelper.GetAsync<List<ObjectModelResponse>>(url);
                        
            Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject( responseModel, Formatting.Indented ));

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }

    public static async void UpdatePartialObject(string objectId)
    {
        try
        {

            var requestModel = new UpdatePartialObjectRequest
            {
                Name = "Apple MacBook Pro 16 (Updated Name)",                
            };

            //7 is a reserved id and the data object of it cannot be overridden. You can create a new object via POST request and use new generated by id from it to send a PATCH request.
            //var objectId = "7";
            var url = "https://api.restful-api.dev/objects/" + objectId ;

            var apiHelper = new ApiHelper(url);
            var responseModel = await apiHelper.PatchAsync<UpdateObjectResponse>(url, requestModel);
                        
            Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject( responseModel, Formatting.Indented ));

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }

    public static async void UpdateObject(string objectId)
    {
        try
        {            
            var requestModel = new UpdateObjectRequest
            {
                Name = "Apple MacBook Pro 16",
                Data = new ObjectData
                {
                    Year = 2019,
                    Price = 2049.99,
                    CPUModel = "Intel Core i9",
                    HardDiskSize = "1 TB"
                }
            };
           
            var url = "https://api.restful-api.dev/objects/" + objectId ;

            var apiHelper = new ApiHelper(url);
            var responseModel = await apiHelper.PutAsync<UpdateObjectResponse>(url, requestModel);
                        
            Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject( responseModel, Formatting.Indented ));

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }

    public static async void DeleteObject(string objectId)
    {
        try
        {           
            //7 is a reserved id and the data object of it cannot be overridden. You can create a new object via POST request and use new generated by id from it to send a PATCH request.
            //var objectId = "7";
            var url = "https://api.restful-api.dev/objects/" + objectId ;

            var apiHelper = new ApiHelper(url);
            var responseModel = await apiHelper.DeleteAsync<BaseResponse>(url);
                        
            Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject( responseModel, Formatting.Indented ));

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }
}